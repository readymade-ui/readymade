{"version":3,"file":"polyfill.js","sources":["../node_modules/@ungap/custom-elements-builtin/esm/index.js"],"sourcesContent":["/*! (c) Andrea Giammarchi - ISC */\n(function (document, customElements, Object) {\n  'use strict';\n  if (customElements.get('ungap-li') || typeof Reflect == typeof EXTENDS)\n    return;\n  var EXTENDS = 'extends';\n  try {\n    // class LI extends HTMLLIElement {}\n    var desc = {};\n    desc[EXTENDS] = 'li';\n    var HtmlLI = HTMLLIElement;\n    var LI = function () {\n      return Reflect.construct(HtmlLI, [], LI);\n    };\n    LI.prototype = Object.create(HtmlLI.prototype);\n    customElements.define('ungap-li', LI, desc);\n    if (!/is=\"ungap-li\"/.test((new LI).outerHTML))\n      throw {};\n  } catch (o_O) {\n    var ATTRIBUTE_CHANGED_CALLBACK = 'attributeChangedCallback';\n    var CONNECTED_CALLBACK = 'connectedCallback';\n    var DISCONNECTED_CALLBACK = 'disconnectedCallback';\n    var assign = Object.assign;\n    var create = Object.create;\n    var defineProperties = Object.defineProperties;\n    var setPrototypeOf = Object.setPrototypeOf;\n    var define = customElements.define;\n    var get = customElements.get;\n    var upgrade = customElements.upgrade;\n    var whenDefined = customElements.whenDefined;\n    var registry = create(null);\n    new MutationObserver(function (changes) {\n      for (var i = 0, length = changes.length; i < length; i++) {\n        var change = changes[i];\n        var addedNodes = change.addedNodes;\n        var removedNodes = change.removedNodes;\n        for (var j = 0, len = addedNodes.length; j < len; j++)\n          setupIfNeeded(addedNodes[j]);\n        for (var j = 0, len = removedNodes.length; j < len; j++)\n          disconnectIfNeeded(removedNodes[j]);\n      }\n    }).observe(\n      document,\n      {childList: true, subtree: true}\n    );\n    defineProperties(\n      customElements,\n      {\n        define: {\n          value: function (name, Class, options) {\n            name = name.toLowerCase();\n            if (options && EXTENDS in options) {\n              // currently options is not used but preserved for the future\n              registry[name] = assign({}, options, {Class: Class});\n              var query = options[EXTENDS] + '[is=\"' + name + '\"]';\n              var changes = document.querySelectorAll(query);\n              for (var i = 0, length = changes.length; i < length; i++)\n                setupIfNeeded(changes[i]);\n            }\n            else\n              define.apply(customElements, arguments);\n          }\n        },\n        get: {\n          value: function (name) {\n            return name in registry ?\n              registry[name].Class :\n              get.call(customElements, name);\n          }\n        },\n        upgrade: {\n          value: function (node) {\n            var info = getInfo(node);\n            if (info && !(node instanceof info.Class))\n              setup(node, info);\n            else\n              upgrade.call(customElements, node);\n          }\n        },\n        whenDefined: {\n          value: function (name) {\n            return name in registry ?\n              Promise.resolve() :\n              whenDefined.call(customElements, name);\n          }\n        }\n      }\n    );\n    var createElement = document.createElement;\n    defineProperties(\n      document,\n      {\n        createElement: {\n          value: function (name, options) {\n            var node = createElement.call(document, name);\n            if (options && 'is' in options) {\n              node.setAttribute('is', options.is);\n              customElements.upgrade(node);\n            }\n            return node;\n          }\n        }\n      }\n    );\n    function attributeChanged(changes) {\n      for (var i = 0, length = changes.length; i < length; i++) {\n        var change = changes[i];\n        var attributeName = change.attributeName;\n        var oldValue = change.oldValue;\n        var target = change.target;\n        var newValue = target.getAttribute(attributeName);\n        if (\n          ATTRIBUTE_CHANGED_CALLBACK in target &&\n          !(oldValue == newValue && newValue == null)\n        )\n          target[ATTRIBUTE_CHANGED_CALLBACK](\n            attributeName,\n            oldValue,\n            target.getAttribute(attributeName),\n            // TODO: add getAttributeNS if the node is XML\n            null\n          );\n      }\n    }\n    function disconnectIfNeeded(node) {\n      if (node.nodeType !== 1)\n        return;\n      setupSubNodes(node, disconnectIfNeeded);\n      var info = getInfo(node);\n      if (\n        info &&\n        node instanceof info.Class &&\n        DISCONNECTED_CALLBACK in node\n      )\n        node[DISCONNECTED_CALLBACK]();\n    }\n    function getInfo(node) {\n      var is = node.getAttribute('is');\n      if (is) {\n        is = is.toLowerCase();\n        if (is in registry)\n          return registry[is];\n      }\n      return null;\n    }\n    function setup(node, info) {\n      var Class = info.Class;\n      var oa = Class.observedAttributes || [];\n      setPrototypeOf(node, Class.prototype);\n      if (oa.length) {\n        new MutationObserver(attributeChanged).observe(\n          node,\n          {\n            attributes: true,\n            attributeFilter: oa,\n            attributeOldValue: true\n          }\n        );\n        var changes = [];\n        for (var i = 0, length = oa.length; i < length; i++)\n          changes.push({attributeName: oa[i], oldValue: null, target: node});\n        attributeChanged(changes);\n      }\n    }\n    function setupIfNeeded(node) {\n      if (node.nodeType !== 1)\n        return;\n      setupSubNodes(node, setupIfNeeded);\n      var info = getInfo(node);\n      if (info) {\n        if (!(node instanceof info.Class))\n          setup(node, info);\n        if (CONNECTED_CALLBACK in node)\n          node[CONNECTED_CALLBACK]();\n      }\n    }\n    function setupSubNodes(node, setup) {\n      var nodes = node.querySelectorAll('[is]');\n      for (var i = 0, length = nodes.length; i < length; i++)\n        setup(nodes[i]);\n    }\n  }\n}(document, customElements, Object));\n"],"names":["document","customElements","Object","get","Reflect","EXTENDS","desc","HtmlLI","HTMLLIElement","LI","construct","prototype","create","define","test","outerHTML","o_O","ATTRIBUTE_CHANGED_CALLBACK","CONNECTED_CALLBACK","DISCONNECTED_CALLBACK","assign","defineProperties","setPrototypeOf","upgrade","whenDefined","registry","MutationObserver","changes","i","length","change","addedNodes","removedNodes","j","len","setupIfNeeded","disconnectIfNeeded","observe","childList","subtree","value","name","Class","options","toLowerCase","query","querySelectorAll","apply","arguments","call","node","info","getInfo","setup","Promise","resolve","createElement","attributeChanged","attributeName","oldValue","target","newValue","getAttribute","nodeType","setupSubNodes","is","oa","observedAttributes","attributes","attributeFilter","attributeOldValue","push","nodes","setAttribute"],"mappings":"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"}